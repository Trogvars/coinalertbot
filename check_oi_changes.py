import sqlite3
from datetime import datetime

conn = sqlite3.connect('bot.db')
cursor = conn.cursor()

print("=" * 80)
print("–†–ï–ê–õ–¨–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø OPEN INTEREST –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 10 –ú–ò–ù–£–¢")
print("=" * 80)

# –ò—â–µ–º –º–æ–Ω–µ—Ç—ã —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
cursor.execute('''
    WITH ranked_oi AS (
        SELECT 
            symbol,
            open_interest,
            timestamp,
            LAG(open_interest) OVER (PARTITION BY symbol ORDER BY timestamp) as prev_oi,
            ROW_NUMBER() OVER (PARTITION BY symbol ORDER BY timestamp DESC) as rn
        FROM open_interest_history
        WHERE timestamp > datetime('now', '-10 minutes')
    )
    SELECT 
        symbol,
        open_interest as current_oi,
        prev_oi,
        ROUND((open_interest - prev_oi) / prev_oi * 100, 2) as change_percent,
        timestamp
    FROM ranked_oi
    WHERE rn = 1 AND prev_oi IS NOT NULL
    ORDER BY ABS((open_interest - prev_oi) / prev_oi * 100) DESC
    LIMIT 80
''')

results = cursor.fetchall()

if results:
    print(f"\n{'Symbol':<12} {'Current OI':<15} {'Previous OI':<15} {'Change %':<10}")
    print("-" * 80)
    
    for symbol, current, previous, change, timestamp in results:
        emoji = "üìà" if change > 0 else "üìâ"
        print(f"{symbol:<12} {current:<15,.0f} {previous:<15,.0f} {emoji} {change:>+7.2f}%")
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(results)}")
    print(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {abs(results[0][3]):.2f}%")
else:
    print("\n‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    print("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ 5-10 –º–∏–Ω—É—Ç –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
cursor.execute('SELECT settings FROM users WHERE user_id = 95166589')
row = cursor.fetchone()

if row:
    import json
    settings = json.loads(row[0])
    
    print("\n" + "=" * 80)
    print("–í–ê–®–ò –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò")
    print("=" * 80)
    print(f"OI Threshold: {settings.get('oi_threshold', 'N/A')}%")
    print(f"Liquidation OI Threshold: {settings.get('liquidation_oi_threshold', 'N/A')}%")
    print(f"Max coins to check: {settings.get('max_coins_to_check', 'N/A')}")
    print(f"Update interval: {settings.get('update_interval', 'N/A')} sec")

conn.close()
